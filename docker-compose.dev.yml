version: '3'

services:
  nginx:
    build:
      dockerfile: Dockerfile.dev
      context: ./nginx
    restart: always #because it's the entrypoint to our app, no much sense in
    # letting it fall
    ports:
      - '3050:80'
  postgres:
    image: 'postgres:latest'
    environment:
      - POSTGRES_PASSWORD=postgres_password
  redis:
    image: 'redis:latest'
  api:
    build:
      dockerfile: Dockerfile.dev # no server directory!
      context: ./server # this will take care of dockerfile too
    # basically we use volumes here to avoid rebuilding the image every time
    # we make a chage. This way, server process will just pick up changed files
    volumes:
      # inside the container do not map that directory anywhere, leave it as it is
      - /app/node_modules
      # map everything inside ./server local dir into /app in the container
      # except node_modules, as specified by previous volume
      - ./server:/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PGHOST=postgres
      - PGDATABASE=postgres
      - PGPASSWORD=postgres_password
      - PGPORT=5432
    depends_on:
      - redis
      - postgres
  frontend:
    build:
      dockerfile: Dockerfile.dev
      context: ./client
    volumes:
      - /app/node_modules
      - ./client:/app
    depends_on:
      - api
  worker:
    build:
      dockerfile: Dockerfile.dev
      context: ./worker
    volumes:
      - /app/node_modules
      - ./worker:/app
    depends_on:
      - redis